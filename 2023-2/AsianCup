{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f347dbff",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "523754f5",
   "metadata": {},
   "source": [
    "International football results from 1872 to 2023를 불러옴"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "08d3dbd8",
   "metadata": {},
   "outputs": [],
   "source": [
    "df= pd.read_csv('results.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "508be326",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"date\"] = pd.to_datetime(df[\"date\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5bb31c6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date          0\n",
       "home_team     0\n",
       "away_team     0\n",
       "home_score    0\n",
       "away_score    0\n",
       "tournament    0\n",
       "city          0\n",
       "country       0\n",
       "neutral       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ff9d8147",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d2fc00e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date          datetime64[ns]\n",
       "home_team             object\n",
       "away_team             object\n",
       "home_score             int64\n",
       "away_score             int64\n",
       "tournament            object\n",
       "city                  object\n",
       "country               object\n",
       "neutral                 bool\n",
       "dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb23bf1a",
   "metadata": {},
   "source": [
    "사용되는 데이터셋은 2015년 아시안컵 이후 2023년 아시안컵 직전까지의 FIFA 게임 데이터"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b15a30f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[(df[\"date\"] >= \"2014-12-30\")].reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3cc2c31d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>home_score</th>\n",
       "      <th>away_score</th>\n",
       "      <th>tournament</th>\n",
       "      <th>city</th>\n",
       "      <th>country</th>\n",
       "      <th>neutral</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8023</th>\n",
       "      <td>2023-10-17</td>\n",
       "      <td>Sri Lanka</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>FIFA World Cup qualification</td>\n",
       "      <td>Colombo</td>\n",
       "      <td>Sri Lanka</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8024</th>\n",
       "      <td>2023-10-17</td>\n",
       "      <td>Taiwan</td>\n",
       "      <td>Timor-Leste</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>FIFA World Cup qualification</td>\n",
       "      <td>Kaohsiung</td>\n",
       "      <td>Taiwan</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8026</th>\n",
       "      <td>2023-10-17</td>\n",
       "      <td>Angola</td>\n",
       "      <td>DR Congo</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Setúbal</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8014</th>\n",
       "      <td>2023-10-17</td>\n",
       "      <td>Uruguay</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>FIFA World Cup qualification</td>\n",
       "      <td>Montevideo</td>\n",
       "      <td>Uruguay</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8055</th>\n",
       "      <td>2023-10-23</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>Kuwait</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Dubai</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           date             home_team    away_team  home_score  away_score  \\\n",
       "8023 2023-10-17             Sri Lanka        Yemen           1           1   \n",
       "8024 2023-10-17                Taiwan  Timor-Leste           3           0   \n",
       "8026 2023-10-17                Angola     DR Congo           0           0   \n",
       "8014 2023-10-17               Uruguay       Brazil           2           0   \n",
       "8055 2023-10-23  United Arab Emirates       Kuwait           1           0   \n",
       "\n",
       "                        tournament        city               country  neutral  \n",
       "8023  FIFA World Cup qualification     Colombo             Sri Lanka    False  \n",
       "8024  FIFA World Cup qualification   Kaohsiung                Taiwan    False  \n",
       "8026                      Friendly     Setúbal              Portugal     True  \n",
       "8014  FIFA World Cup qualification  Montevideo               Uruguay    False  \n",
       "8055                      Friendly       Dubai  United Arab Emirates    False  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sort_values(\"date\").tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "85665ce9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "United States    98\n",
       "Mexico           91\n",
       "Japan            79\n",
       "Qatar            78\n",
       "South Korea      74\n",
       "                 ..\n",
       "Saint Helena      1\n",
       "Romani people     1\n",
       "Aymara            1\n",
       "Ticino            1\n",
       "Hmong             1\n",
       "Name: home_team, Length: 278, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.home_team.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2343fb5b",
   "metadata": {},
   "source": [
    "FIFA World Ranking 1992-2023 불러온 후 동일하게 2015년 아시안컵 이후 2023년 아시안컵 직전까지의 FIFA 게임 데이터로 분리"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ec60c949",
   "metadata": {},
   "outputs": [],
   "source": [
    "rank= pd.read_csv('fifa_ranking-2023-07-20.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "73faea85",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "rank                 int64\n",
       "country_full        object\n",
       "country_abrv        object\n",
       "total_points       float64\n",
       "previous_points    float64\n",
       "rank_change          int64\n",
       "confederation       object\n",
       "rank_date           object\n",
       "dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rank.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4e85fd95",
   "metadata": {},
   "outputs": [],
   "source": [
    "rank[\"rank_date\"] = pd.to_datetime(rank[\"rank_date\"])\n",
    "rank = rank[(rank[\"rank_date\"] >= \"2014-12-30\")].reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64569317",
   "metadata": {},
   "source": [
    "같은 국가인데 이름이 다르게 사용되는 경우를 하나로 합쳐줌 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "de1f42e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "rank[\"country_full\"] = rank[\"country_full\"].str.replace(\"IR Iran\", \"Iran\").str.replace(\"Korea Republic\", \"South Korea\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "03610236",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>country_full</th>\n",
       "      <th>country_abrv</th>\n",
       "      <th>total_points</th>\n",
       "      <th>previous_points</th>\n",
       "      <th>rank_change</th>\n",
       "      <th>confederation</th>\n",
       "      <th>rank_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16820</th>\n",
       "      <td>66</td>\n",
       "      <td>Cabo Verde</td>\n",
       "      <td>CPV</td>\n",
       "      <td>1354.65</td>\n",
       "      <td>1354.65</td>\n",
       "      <td>0</td>\n",
       "      <td>CAF</td>\n",
       "      <td>2023-07-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16821</th>\n",
       "      <td>67</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>ISL</td>\n",
       "      <td>1352.98</td>\n",
       "      <td>1352.98</td>\n",
       "      <td>0</td>\n",
       "      <td>UEFA</td>\n",
       "      <td>2023-07-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16822</th>\n",
       "      <td>68</td>\n",
       "      <td>North Macedonia</td>\n",
       "      <td>MKD</td>\n",
       "      <td>1350.53</td>\n",
       "      <td>1350.53</td>\n",
       "      <td>0</td>\n",
       "      <td>UEFA</td>\n",
       "      <td>2023-07-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16823</th>\n",
       "      <td>58</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>JAM</td>\n",
       "      <td>1409.73</td>\n",
       "      <td>1367.83</td>\n",
       "      <td>-5</td>\n",
       "      <td>CONCACAF</td>\n",
       "      <td>2023-07-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16824</th>\n",
       "      <td>205</td>\n",
       "      <td>US Virgin Islands</td>\n",
       "      <td>VIR</td>\n",
       "      <td>816.59</td>\n",
       "      <td>816.59</td>\n",
       "      <td>-3</td>\n",
       "      <td>CONCACAF</td>\n",
       "      <td>2023-07-20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       rank       country_full country_abrv  total_points  previous_points  \\\n",
       "16820    66         Cabo Verde          CPV       1354.65          1354.65   \n",
       "16821    67            Iceland          ISL       1352.98          1352.98   \n",
       "16822    68    North Macedonia          MKD       1350.53          1350.53   \n",
       "16823    58            Jamaica          JAM       1409.73          1367.83   \n",
       "16824   205  US Virgin Islands          VIR        816.59           816.59   \n",
       "\n",
       "       rank_change confederation  rank_date  \n",
       "16820            0           CAF 2023-07-20  \n",
       "16821            0          UEFA 2023-07-20  \n",
       "16822            0          UEFA 2023-07-20  \n",
       "16823           -5      CONCACAF 2023-07-20  \n",
       "16824           -3      CONCACAF 2023-07-20  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rank.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb83a1a8",
   "metadata": {},
   "source": [
    "불러온 두개의 데이터셋의 merge 해주자 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1f592aa4",
   "metadata": {},
   "outputs": [],
   "source": [
    "rank = rank.set_index(['rank_date']).groupby(['country_full'], group_keys=False).resample('D').first().fillna(method='ffill').reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b46e4d4c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_wc_ranked = df.merge(rank[[\"country_full\", \"total_points\", \"previous_points\", \"rank\", \"rank_change\", \"rank_date\"]], left_on=[\"date\", \"home_team\"], right_on=[\"rank_date\", \"country_full\"]).drop([\"rank_date\", \"country_full\"], axis=1)\n",
    "\n",
    "df_wc_ranked = df_wc_ranked.merge(rank[[\"country_full\", \"total_points\", \"previous_points\", \"rank\", \"rank_change\", \"rank_date\"]], left_on=[\"date\", \"away_team\"], right_on=[\"rank_date\", \"country_full\"], suffixes=(\"_home\", \"_away\")).drop([\"rank_date\", \"country_full\"], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "01a272ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date                    datetime64[ns]\n",
       "home_team                       object\n",
       "away_team                       object\n",
       "home_score                       int64\n",
       "away_score                       int64\n",
       "tournament                      object\n",
       "city                            object\n",
       "country                         object\n",
       "neutral                           bool\n",
       "total_points_home              float64\n",
       "previous_points_home           float64\n",
       "rank_home                      float64\n",
       "rank_change_home               float64\n",
       "total_points_away              float64\n",
       "previous_points_away           float64\n",
       "rank_away                      float64\n",
       "rank_change_away               float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_wc_ranked.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "57dc3ceb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>home_score</th>\n",
       "      <th>away_score</th>\n",
       "      <th>tournament</th>\n",
       "      <th>city</th>\n",
       "      <th>country</th>\n",
       "      <th>neutral</th>\n",
       "      <th>total_points_home</th>\n",
       "      <th>previous_points_home</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>total_points_away</th>\n",
       "      <th>previous_points_away</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>rank_change_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5961</th>\n",
       "      <td>2022-09-27</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Cameroon</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Seoul</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>False</td>\n",
       "      <td>1526.02</td>\n",
       "      <td>1526.20</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1484.95</td>\n",
       "      <td>1484.95</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5997</th>\n",
       "      <td>2022-11-11</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Hwaseong</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>False</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>1526.02</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1384.41</td>\n",
       "      <td>1379.61</td>\n",
       "      <td>62.0</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6084</th>\n",
       "      <td>2022-11-24</td>\n",
       "      <td>Uruguay</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>FIFA World Cup</td>\n",
       "      <td>Al Rayyan</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>True</td>\n",
       "      <td>1638.71</td>\n",
       "      <td>1640.95</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>1526.02</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6099</th>\n",
       "      <td>2022-11-28</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Ghana</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>FIFA World Cup</td>\n",
       "      <td>Al Rayyan</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>True</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>1526.02</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1393.00</td>\n",
       "      <td>1393.47</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6115</th>\n",
       "      <td>2022-12-02</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>FIFA World Cup</td>\n",
       "      <td>Al Rayyan</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>True</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>1526.02</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1676.56</td>\n",
       "      <td>1678.65</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6120</th>\n",
       "      <td>2022-12-05</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>FIFA World Cup</td>\n",
       "      <td>Doha</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>True</td>\n",
       "      <td>1841.30</td>\n",
       "      <td>1837.56</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>1526.02</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6200</th>\n",
       "      <td>2023-03-24</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Ulsan</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>False</td>\n",
       "      <td>1539.49</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>25.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>1612.78</td>\n",
       "      <td>1611.04</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6289</th>\n",
       "      <td>2023-03-28</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Uruguay</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Seoul</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>False</td>\n",
       "      <td>1539.49</td>\n",
       "      <td>1530.30</td>\n",
       "      <td>25.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>1627.45</td>\n",
       "      <td>1638.71</td>\n",
       "      <td>16.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6350</th>\n",
       "      <td>2023-06-16</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Peru</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Busan</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>False</td>\n",
       "      <td>1536.01</td>\n",
       "      <td>1539.49</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1561.20</td>\n",
       "      <td>1564.30</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6413</th>\n",
       "      <td>2023-06-20</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>El Salvador</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Friendly</td>\n",
       "      <td>Daejeon</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>False</td>\n",
       "      <td>1536.01</td>\n",
       "      <td>1539.49</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1318.30</td>\n",
       "      <td>1326.86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           date    home_team    away_team  home_score  away_score  \\\n",
       "5961 2022-09-27  South Korea     Cameroon           1           0   \n",
       "5997 2022-11-11  South Korea      Iceland           1           0   \n",
       "6084 2022-11-24      Uruguay  South Korea           0           0   \n",
       "6099 2022-11-28  South Korea        Ghana           2           3   \n",
       "6115 2022-12-02  South Korea     Portugal           2           1   \n",
       "6120 2022-12-05       Brazil  South Korea           4           1   \n",
       "6200 2023-03-24  South Korea     Colombia           2           2   \n",
       "6289 2023-03-28  South Korea      Uruguay           1           2   \n",
       "6350 2023-06-16  South Korea         Peru           0           1   \n",
       "6413 2023-06-20  South Korea  El Salvador           1           1   \n",
       "\n",
       "          tournament       city      country  neutral  total_points_home  \\\n",
       "5961        Friendly      Seoul  South Korea    False            1526.02   \n",
       "5997        Friendly   Hwaseong  South Korea    False            1530.30   \n",
       "6084  FIFA World Cup  Al Rayyan        Qatar     True            1638.71   \n",
       "6099  FIFA World Cup  Al Rayyan        Qatar     True            1530.30   \n",
       "6115  FIFA World Cup  Al Rayyan        Qatar     True            1530.30   \n",
       "6120  FIFA World Cup       Doha        Qatar     True            1841.30   \n",
       "6200        Friendly      Ulsan  South Korea    False            1539.49   \n",
       "6289        Friendly      Seoul  South Korea    False            1539.49   \n",
       "6350        Friendly      Busan  South Korea    False            1536.01   \n",
       "6413        Friendly    Daejeon  South Korea    False            1536.01   \n",
       "\n",
       "      previous_points_home  rank_home  rank_change_home  total_points_away  \\\n",
       "5961               1526.20       28.0               0.0            1484.95   \n",
       "5997               1526.02       28.0               0.0            1384.41   \n",
       "6084               1640.95       14.0               1.0            1530.30   \n",
       "6099               1526.02       28.0               0.0            1393.00   \n",
       "6115               1526.02       28.0               0.0            1676.56   \n",
       "6120               1837.56        1.0               0.0            1530.30   \n",
       "6200               1530.30       25.0              -3.0            1612.78   \n",
       "6289               1530.30       25.0              -3.0            1627.45   \n",
       "6350               1539.49       27.0               2.0            1561.20   \n",
       "6413               1539.49       27.0               2.0            1318.30   \n",
       "\n",
       "      previous_points_away  rank_away  rank_change_away  \n",
       "5961               1484.95       38.0               0.0  \n",
       "5997               1379.61       62.0              -1.0  \n",
       "6084               1526.02       28.0               0.0  \n",
       "6099               1393.47       61.0               1.0  \n",
       "6115               1678.65        9.0               0.0  \n",
       "6120               1526.02       28.0               0.0  \n",
       "6200               1611.04       17.0               0.0  \n",
       "6289               1638.71       16.0               2.0  \n",
       "6350               1564.30       21.0               0.0  \n",
       "6413               1326.86       75.0               1.0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_wc_ranked[(df_wc_ranked.home_team == \"South Korea\") | (df_wc_ranked.away_team == \"South Korea\")].tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f3d21ab",
   "metadata": {},
   "source": [
    "오케이 이제 데이터셋은 준비됐고 Feature enigineering 통해서 예측에 필요한 특성 생성해보자 \n",
    "- 이전 게임에서 획득한 포인트\n",
    "- 이전에 득점한 득점과 허용된 득점\n",
    "- 게임의 중요성(친선 경기인지 아닌지)\n",
    "- 팀의 랭킹\n",
    "- 팀의 랭킹 증가\n",
    "- 랭킹에 따른 득점과 허용된 득점\n",
    ">위와 같은 특성 반영해보자"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "526a62ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df_wc_ranked"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "33ebeb99",
   "metadata": {},
   "outputs": [],
   "source": [
    "def result_finder(home, away):\n",
    "    if home > away:\n",
    "        return pd.Series([0, 3, 0])\n",
    "    if home < away:\n",
    "        return pd.Series([1, 0, 3])\n",
    "    else:\n",
    "        return pd.Series([2, 1, 1])\n",
    "\n",
    "results = df.apply(lambda x: result_finder(x[\"home_score\"], x[\"away_score\"]), axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "72f9c775",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[[\"result\", \"home_team_points\", \"away_team_points\"]] = results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "56167a92",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#FIFA 랭킹 포인트와 같은 팀의 FIFA 랭킹은 음의 상관 관계\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(15, 10))\n",
    "sns.heatmap(df[[\"total_points_home\", \"rank_home\", \"total_points_away\", \"rank_away\"]].corr())\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e604a839",
   "metadata": {},
   "source": [
    "추가적인 열 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "513f950a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 랭킹 차이\n",
    "df[\"rank_dif\"] = df[\"rank_home\"] - df[\"rank_away\"]\n",
    "#게임에서의 득점 차이\n",
    "df[\"sg\"] = df[\"home_score\"] - df[\"away_score\"]\n",
    "#상대 팀 랭킹 대비 게임에서 얻은 포인트\n",
    "df[\"points_home_by_rank\"] = df[\"home_team_points\"]/df[\"rank_away\"]\n",
    "df[\"points_away_by_rank\"] = df[\"away_team_points\"]/df[\"rank_home\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ee6eae9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_team = df[[\"date\", \"home_team\", \"home_score\", \"away_score\", \"rank_home\", \"rank_away\",\"rank_change_home\", \"total_points_home\", \"result\", \"rank_dif\", \"points_home_by_rank\", \"home_team_points\"]]\n",
    "\n",
    "away_team = df[[\"date\", \"away_team\", \"away_score\", \"home_score\", \"rank_away\", \"rank_home\",\"rank_change_away\", \"total_points_away\", \"result\", \"rank_dif\", \"points_away_by_rank\", \"away_team_points\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "dde35d59",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_team.columns = [h.replace(\"home_\", \"\").replace(\"_home\", \"\").replace(\"away_\", \"suf_\").replace(\"_away\", \"_suf\") for h in home_team.columns]\n",
    "\n",
    "away_team.columns = [a.replace(\"away_\", \"\").replace(\"_away\", \"\").replace(\"home_\", \"suf_\").replace(\"_home\", \"_suf\") for a in away_team.columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "6525b205",
   "metadata": {},
   "outputs": [],
   "source": [
    "team_stats = pd.concat([home_team, away_team])#.sort_values(\"date\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4d95bbf9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>team</th>\n",
       "      <th>score</th>\n",
       "      <th>suf_score</th>\n",
       "      <th>rank</th>\n",
       "      <th>rank_suf</th>\n",
       "      <th>rank_change</th>\n",
       "      <th>total_points</th>\n",
       "      <th>result</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>points_by_rank</th>\n",
       "      <th>team_points</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-01-09</td>\n",
       "      <td>Australia</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>100.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>329.0</td>\n",
       "      <td>0</td>\n",
       "      <td>-25.0</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015-01-09</td>\n",
       "      <td>Senegal</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>734.0</td>\n",
       "      <td>0</td>\n",
       "      <td>-27.0</td>\n",
       "      <td>0.048387</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2015-01-10</td>\n",
       "      <td>Cameroon</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>42.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>665.0</td>\n",
       "      <td>2</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>0.019231</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015-01-10</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>487.0</td>\n",
       "      <td>0</td>\n",
       "      <td>-24.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2015-01-10</td>\n",
       "      <td>Saudi Arabia</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>102.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>318.0</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        date          team  score  suf_score   rank  rank_suf  rank_change  \\\n",
       "0 2015-01-09     Australia      4          1  100.0     125.0          0.0   \n",
       "1 2015-01-09       Senegal      1          0   35.0      62.0          0.0   \n",
       "2 2015-01-10      Cameroon      1          1   42.0      52.0          0.0   \n",
       "3 2015-01-10   South Korea      1          0   69.0      93.0          0.0   \n",
       "4 2015-01-10  Saudi Arabia      0          1  102.0      96.0          0.0   \n",
       "\n",
       "   total_points  result  rank_dif  points_by_rank  team_points  \n",
       "0         329.0       0     -25.0        0.024000            3  \n",
       "1         734.0       0     -27.0        0.048387            3  \n",
       "2         665.0       2     -10.0        0.019231            1  \n",
       "3         487.0       0     -24.0        0.032258            3  \n",
       "4         318.0       1       6.0        0.000000            0  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "team_stats.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "9e1c0b6f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#this column will be used to calculate features for simulation\n",
    "team_stats_raw = team_stats.copy()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70605f17",
   "metadata": {},
   "source": [
    "다음과 같은 요소들의 생각해보자 \n",
    "\n",
    "- 아시안컵 주기 동안 팀의 평균 득점.\n",
    "- 최근 5 경기에서 팀의 평균 득점.\n",
    "- 아시안컵 주기 동안 팀이 소비한 평균 득점.\n",
    "- 최근 5 경기에서 팀이 소비한 평균 득점.\n",
    "- 아시안컵 주기 동안 팀이 마주한 상대팀의 평균 FIFA 랭킹.\n",
    "- 최근 5 경기에서 팀이 마주한 상대팀의 평균 FIFA 랭킹.\n",
    "- 주기 동안 획득한 FIFA 포인트.\n",
    "- 최근 5 경기에서 획득한 FIFA 포인트.\n",
    "- 주기 동안의 평균 게임 포인트.\n",
    "- 최근 5 경기의 평균 게임 포인트.\n",
    "- 주기 동안 상대 FIFA 랭킹에 따른 평균 게임 포인트.\n",
    "- 최근 5 경기에서 상대 FIFA 랭킹에 따른 평균 게임 포인트"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "57fc47eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "stats_val = []\n",
    "\n",
    "for index, row in team_stats.iterrows():\n",
    "    team = row[\"team\"]\n",
    "    date = row[\"date\"]\n",
    "    past_games = team_stats.loc[(team_stats[\"team\"] == team) & (team_stats[\"date\"] < date)].sort_values(by=['date'], ascending=False)\n",
    "    last5 = past_games.head(5)\n",
    "    \n",
    "    goals = past_games[\"score\"].mean()\n",
    "    goals_l5 = last5[\"score\"].mean()\n",
    "    \n",
    "    goals_suf = past_games[\"suf_score\"].mean()\n",
    "    goals_suf_l5 = last5[\"suf_score\"].mean()\n",
    "    \n",
    "    rank = past_games[\"rank_suf\"].mean()\n",
    "    rank_l5 = last5[\"rank_suf\"].mean()\n",
    "    \n",
    "    if len(last5) > 0:\n",
    "        points = past_games[\"total_points\"].values[0] - past_games[\"total_points\"].values[-1]#qtd de pontos ganhos\n",
    "        points_l5 = last5[\"total_points\"].values[0] - last5[\"total_points\"].values[-1] \n",
    "    else:\n",
    "        points = 0\n",
    "        points_l5 = 0\n",
    "        \n",
    "    gp = past_games[\"team_points\"].mean()\n",
    "    gp_l5 = last5[\"team_points\"].mean()\n",
    "    \n",
    "    gp_rank = past_games[\"points_by_rank\"].mean()\n",
    "    gp_rank_l5 = last5[\"points_by_rank\"].mean()\n",
    "    \n",
    "    stats_val.append([goals, goals_l5, goals_suf, goals_suf_l5, rank, rank_l5, points, points_l5, gp, gp_l5, gp_rank, gp_rank_l5])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ff1b1213",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12924"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(stats_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7251c3a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "stats_cols = [\"goals_mean\", \"goals_mean_l5\", \"goals_suf_mean\", \"goals_suf_mean_l5\", \"rank_mean\", \"rank_mean_l5\", \"points_mean\", \"points_mean_l5\", \"game_points_mean\", \"game_points_mean_l5\", \"game_points_rank_mean\", \"game_points_rank_mean_l5\"]\n",
    "\n",
    "stats_df = pd.DataFrame(stats_val, columns=stats_cols)\n",
    "\n",
    "full_df = pd.concat([team_stats.reset_index(drop=True), stats_df], axis=1, ignore_index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "75177fe2",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_team_stats = full_df.iloc[:int(full_df.shape[0]/2),:]\n",
    "away_team_stats = full_df.iloc[int(full_df.shape[0]/2):,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "622ad477",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['goals_mean', 'goals_mean_l5', 'goals_suf_mean', 'goals_suf_mean_l5',\n",
       "       'rank_mean', 'rank_mean_l5', 'points_mean', 'points_mean_l5',\n",
       "       'game_points_mean', 'game_points_mean_l5', 'game_points_rank_mean',\n",
       "       'game_points_rank_mean_l5'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "home_team_stats.columns[-12:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "546ab6f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_team_stats = home_team_stats[home_team_stats.columns[-12:]]\n",
    "away_team_stats = away_team_stats[away_team_stats.columns[-12:]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b3a49821",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_team_stats.columns = ['home_'+str(col) for col in home_team_stats.columns]\n",
    "away_team_stats.columns = ['away_'+str(col) for col in away_team_stats.columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2f5fa705",
   "metadata": {},
   "outputs": [],
   "source": [
    "match_stats = pd.concat([home_team_stats, away_team_stats.reset_index(drop=True)], axis=1, ignore_index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "42087229",
   "metadata": {},
   "outputs": [],
   "source": [
    "full_df = pd.concat([df, match_stats.reset_index(drop=True)], axis=1, ignore_index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b39fc864",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>home_score</th>\n",
       "      <th>away_score</th>\n",
       "      <th>tournament</th>\n",
       "      <th>city</th>\n",
       "      <th>country</th>\n",
       "      <th>neutral</th>\n",
       "      <th>total_points_home</th>\n",
       "      <th>...</th>\n",
       "      <th>away_goals_suf_mean</th>\n",
       "      <th>away_goals_suf_mean_l5</th>\n",
       "      <th>away_rank_mean</th>\n",
       "      <th>away_rank_mean_l5</th>\n",
       "      <th>away_points_mean</th>\n",
       "      <th>away_points_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6457</th>\n",
       "      <td>2023-07-08</td>\n",
       "      <td>Panama</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>Gold Cup</td>\n",
       "      <td>Arlington</td>\n",
       "      <td>United States</td>\n",
       "      <td>True</td>\n",
       "      <td>1399.23</td>\n",
       "      <td>...</td>\n",
       "      <td>1.150000</td>\n",
       "      <td>1.2</td>\n",
       "      <td>78.900000</td>\n",
       "      <td>62.6</td>\n",
       "      <td>1046.52</td>\n",
       "      <td>-0.04</td>\n",
       "      <td>1.658333</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.025406</td>\n",
       "      <td>0.054850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6458</th>\n",
       "      <td>2023-07-08</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Costa Rica</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Gold Cup</td>\n",
       "      <td>Arlington</td>\n",
       "      <td>United States</td>\n",
       "      <td>True</td>\n",
       "      <td>1639.19</td>\n",
       "      <td>...</td>\n",
       "      <td>1.164948</td>\n",
       "      <td>1.2</td>\n",
       "      <td>54.814433</td>\n",
       "      <td>75.8</td>\n",
       "      <td>383.30</td>\n",
       "      <td>-12.82</td>\n",
       "      <td>1.309278</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.039123</td>\n",
       "      <td>0.004904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6459</th>\n",
       "      <td>2023-07-09</td>\n",
       "      <td>Guatemala</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Gold Cup</td>\n",
       "      <td>Cincinnati</td>\n",
       "      <td>United States</td>\n",
       "      <td>True</td>\n",
       "      <td>1166.60</td>\n",
       "      <td>...</td>\n",
       "      <td>1.269231</td>\n",
       "      <td>1.4</td>\n",
       "      <td>79.641026</td>\n",
       "      <td>73.6</td>\n",
       "      <td>918.87</td>\n",
       "      <td>2.58</td>\n",
       "      <td>1.294872</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.019150</td>\n",
       "      <td>0.021026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6460</th>\n",
       "      <td>2023-07-12</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Gold Cup</td>\n",
       "      <td>Paradise</td>\n",
       "      <td>United States</td>\n",
       "      <td>True</td>\n",
       "      <td>1367.83</td>\n",
       "      <td>...</td>\n",
       "      <td>0.946970</td>\n",
       "      <td>0.4</td>\n",
       "      <td>55.060606</td>\n",
       "      <td>65.0</td>\n",
       "      <td>731.19</td>\n",
       "      <td>7.32</td>\n",
       "      <td>1.954545</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.077421</td>\n",
       "      <td>0.039027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6461</th>\n",
       "      <td>2023-07-16</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Panama</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Gold Cup</td>\n",
       "      <td>Inglewood</td>\n",
       "      <td>United States</td>\n",
       "      <td>True</td>\n",
       "      <td>1639.19</td>\n",
       "      <td>...</td>\n",
       "      <td>1.360000</td>\n",
       "      <td>1.2</td>\n",
       "      <td>57.280000</td>\n",
       "      <td>47.0</td>\n",
       "      <td>842.23</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.330000</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.029696</td>\n",
       "      <td>0.028361</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 48 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  home_team   away_team  home_score  away_score tournament  \\\n",
       "6457 2023-07-08     Panama       Qatar           4           0   Gold Cup   \n",
       "6458 2023-07-08     Mexico  Costa Rica           2           0   Gold Cup   \n",
       "6459 2023-07-09  Guatemala     Jamaica           0           1   Gold Cup   \n",
       "6460 2023-07-12    Jamaica      Mexico           0           3   Gold Cup   \n",
       "6461 2023-07-16     Mexico      Panama           1           0   Gold Cup   \n",
       "\n",
       "            city        country  neutral  total_points_home  ...  \\\n",
       "6457   Arlington  United States     True            1399.23  ...   \n",
       "6458   Arlington  United States     True            1639.19  ...   \n",
       "6459  Cincinnati  United States     True            1166.60  ...   \n",
       "6460    Paradise  United States     True            1367.83  ...   \n",
       "6461   Inglewood  United States     True            1639.19  ...   \n",
       "\n",
       "      away_goals_suf_mean  away_goals_suf_mean_l5  away_rank_mean  \\\n",
       "6457             1.150000                     1.2       78.900000   \n",
       "6458             1.164948                     1.2       54.814433   \n",
       "6459             1.269231                     1.4       79.641026   \n",
       "6460             0.946970                     0.4       55.060606   \n",
       "6461             1.360000                     1.2       57.280000   \n",
       "\n",
       "      away_rank_mean_l5  away_points_mean  away_points_mean_l5  \\\n",
       "6457               62.6           1046.52                -0.04   \n",
       "6458               75.8            383.30               -12.82   \n",
       "6459               73.6            918.87                 2.58   \n",
       "6460               65.0            731.19                 7.32   \n",
       "6461               47.0            842.23                 0.00   \n",
       "\n",
       "      away_game_points_mean  away_game_points_mean_l5  \\\n",
       "6457               1.658333                       1.4   \n",
       "6458               1.309278                       0.4   \n",
       "6459               1.294872                       1.0   \n",
       "6460               1.954545                       2.4   \n",
       "6461               1.330000                       1.4   \n",
       "\n",
       "      away_game_points_rank_mean  away_game_points_rank_mean_l5  \n",
       "6457                    0.025406                       0.054850  \n",
       "6458                    0.039123                       0.004904  \n",
       "6459                    0.019150                       0.021026  \n",
       "6460                    0.077421                       0.039027  \n",
       "6461                    0.029696                       0.028361  \n",
       "\n",
       "[5 rows x 48 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63ecd91b",
   "metadata": {},
   "source": [
    "게임 중요성을 양적으로 나타내기 위해 경기의 대회를 나타내는 열 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "54bffd88",
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_friendly(x):\n",
    "    if x == \"Friendly\":\n",
    "        return 1\n",
    "    else: return 0\n",
    "\n",
    "full_df[\"is_friendly\"] = full_df[\"tournament\"].apply(lambda x: find_friendly(x)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "9d36a69f",
   "metadata": {},
   "outputs": [],
   "source": [
    "full_df = pd.get_dummies(full_df, columns=[\"is_friendly\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "4d8d9eb7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['date', 'home_team', 'away_team', 'home_score', 'away_score',\n",
       "       'tournament', 'city', 'country', 'neutral', 'total_points_home',\n",
       "       'previous_points_home', 'rank_home', 'rank_change_home',\n",
       "       'total_points_away', 'previous_points_away', 'rank_away',\n",
       "       'rank_change_away', 'result', 'home_team_points', 'away_team_points',\n",
       "       'rank_dif', 'sg', 'points_home_by_rank', 'points_away_by_rank',\n",
       "       'home_goals_mean', 'home_goals_mean_l5', 'home_goals_suf_mean',\n",
       "       'home_goals_suf_mean_l5', 'home_rank_mean', 'home_rank_mean_l5',\n",
       "       'home_points_mean', 'home_points_mean_l5', 'home_game_points_mean',\n",
       "       'home_game_points_mean_l5', 'home_game_points_rank_mean',\n",
       "       'home_game_points_rank_mean_l5', 'away_goals_mean',\n",
       "       'away_goals_mean_l5', 'away_goals_suf_mean', 'away_goals_suf_mean_l5',\n",
       "       'away_rank_mean', 'away_rank_mean_l5', 'away_points_mean',\n",
       "       'away_points_mean_l5', 'away_game_points_mean',\n",
       "       'away_game_points_mean_l5', 'away_game_points_rank_mean',\n",
       "       'away_game_points_rank_mean_l5', 'is_friendly_0', 'is_friendly_1'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "946768d7",
   "metadata": {},
   "source": [
    "예측에 사용할 행 선택 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "f15eea8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>home_score</th>\n",
       "      <th>away_score</th>\n",
       "      <th>result</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>...</th>\n",
       "      <th>home_game_points_mean</th>\n",
       "      <th>home_game_points_mean_l5</th>\n",
       "      <th>home_game_points_rank_mean</th>\n",
       "      <th>home_game_points_rank_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "      <th>is_friendly_0</th>\n",
       "      <th>is_friendly_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6457</th>\n",
       "      <td>2023-07-08</td>\n",
       "      <td>Panama</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>57.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.313131</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.029474</td>\n",
       "      <td>0.022302</td>\n",
       "      <td>1.658333</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.025406</td>\n",
       "      <td>0.054850</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6458</th>\n",
       "      <td>2023-07-08</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Costa Rica</td>\n",
       "      <td>14.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-28.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.946565</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.077467</td>\n",
       "      <td>0.029503</td>\n",
       "      <td>1.309278</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.039123</td>\n",
       "      <td>0.004904</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6459</th>\n",
       "      <td>2023-07-09</td>\n",
       "      <td>Guatemala</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>116.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>53.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.523810</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.015821</td>\n",
       "      <td>0.023465</td>\n",
       "      <td>1.294872</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.019150</td>\n",
       "      <td>0.021026</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6460</th>\n",
       "      <td>2023-07-12</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>63.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.316456</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.019235</td>\n",
       "      <td>0.024275</td>\n",
       "      <td>1.954545</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.077421</td>\n",
       "      <td>0.039027</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6461</th>\n",
       "      <td>2023-07-16</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Panama</td>\n",
       "      <td>14.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-43.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.962406</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.077197</td>\n",
       "      <td>0.038206</td>\n",
       "      <td>1.330000</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.029696</td>\n",
       "      <td>0.028361</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 37 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  home_team   away_team  rank_home  rank_away  home_score  \\\n",
       "6457 2023-07-08     Panama       Qatar       57.0       58.0           4   \n",
       "6458 2023-07-08     Mexico  Costa Rica       14.0       42.0           2   \n",
       "6459 2023-07-09  Guatemala     Jamaica      116.0       63.0           0   \n",
       "6460 2023-07-12    Jamaica      Mexico       63.0       14.0           0   \n",
       "6461 2023-07-16     Mexico      Panama       14.0       57.0           1   \n",
       "\n",
       "      away_score  result  rank_dif  rank_change_home  ...  \\\n",
       "6457           0       0      -1.0              -1.0  ...   \n",
       "6458           0       0     -28.0              -1.0  ...   \n",
       "6459           1       1      53.0               0.0  ...   \n",
       "6460           3       1      49.0               0.0  ...   \n",
       "6461           0       0     -43.0              -1.0  ...   \n",
       "\n",
       "      home_game_points_mean  home_game_points_mean_l5  \\\n",
       "6457               1.313131                       1.4   \n",
       "6458               1.946565                       2.0   \n",
       "6459               1.523810                       1.4   \n",
       "6460               1.316456                       1.4   \n",
       "6461               1.962406                       2.4   \n",
       "\n",
       "      home_game_points_rank_mean  home_game_points_rank_mean_l5  \\\n",
       "6457                    0.029474                       0.022302   \n",
       "6458                    0.077467                       0.029503   \n",
       "6459                    0.015821                       0.023465   \n",
       "6460                    0.019235                       0.024275   \n",
       "6461                    0.077197                       0.038206   \n",
       "\n",
       "      away_game_points_mean  away_game_points_mean_l5  \\\n",
       "6457               1.658333                       1.4   \n",
       "6458               1.309278                       0.4   \n",
       "6459               1.294872                       1.0   \n",
       "6460               1.954545                       2.4   \n",
       "6461               1.330000                       1.4   \n",
       "\n",
       "      away_game_points_rank_mean  away_game_points_rank_mean_l5  \\\n",
       "6457                    0.025406                       0.054850   \n",
       "6458                    0.039123                       0.004904   \n",
       "6459                    0.019150                       0.021026   \n",
       "6460                    0.077421                       0.039027   \n",
       "6461                    0.029696                       0.028361   \n",
       "\n",
       "      is_friendly_0  is_friendly_1  \n",
       "6457              1              0  \n",
       "6458              1              0  \n",
       "6459              1              0  \n",
       "6460              1              0  \n",
       "6461              1              0  \n",
       "\n",
       "[5 rows x 37 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_df = full_df[[\"date\", \"home_team\", \"away_team\", \"rank_home\", \"rank_away\",\"home_score\", \"away_score\",\"result\", \"rank_dif\", \"rank_change_home\", \"rank_change_away\", 'home_goals_mean',\n",
    "       'home_goals_mean_l5', 'home_goals_suf_mean', 'home_goals_suf_mean_l5',\n",
    "       'home_rank_mean', 'home_rank_mean_l5', 'home_points_mean',\n",
    "       'home_points_mean_l5', 'away_goals_mean', 'away_goals_mean_l5',\n",
    "       'away_goals_suf_mean', 'away_goals_suf_mean_l5', 'away_rank_mean',\n",
    "       'away_rank_mean_l5', 'away_points_mean', 'away_points_mean_l5','home_game_points_mean', 'home_game_points_mean_l5',\n",
    "       'home_game_points_rank_mean', 'home_game_points_rank_mean_l5','away_game_points_mean',\n",
    "       'away_game_points_mean_l5', 'away_game_points_rank_mean',\n",
    "       'away_game_points_rank_mean_l5',\n",
    "       'is_friendly_0', 'is_friendly_1']]\n",
    "\n",
    "base_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "7473034c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date                               0\n",
       "home_team                          0\n",
       "away_team                          0\n",
       "rank_home                          0\n",
       "rank_away                          0\n",
       "home_score                         0\n",
       "away_score                         0\n",
       "result                             0\n",
       "rank_dif                           0\n",
       "rank_change_home                   0\n",
       "rank_change_away                   0\n",
       "home_goals_mean                   93\n",
       "home_goals_mean_l5                93\n",
       "home_goals_suf_mean               93\n",
       "home_goals_suf_mean_l5            93\n",
       "home_rank_mean                    93\n",
       "home_rank_mean_l5                 93\n",
       "home_points_mean                   0\n",
       "home_points_mean_l5                0\n",
       "away_goals_mean                  106\n",
       "away_goals_mean_l5               106\n",
       "away_goals_suf_mean              106\n",
       "away_goals_suf_mean_l5           106\n",
       "away_rank_mean                   106\n",
       "away_rank_mean_l5                106\n",
       "away_points_mean                   0\n",
       "away_points_mean_l5                0\n",
       "home_game_points_mean             93\n",
       "home_game_points_mean_l5          93\n",
       "home_game_points_rank_mean        93\n",
       "home_game_points_rank_mean_l5     93\n",
       "away_game_points_mean            106\n",
       "away_game_points_mean_l5         106\n",
       "away_game_points_rank_mean       106\n",
       "away_game_points_rank_mean_l5    106\n",
       "is_friendly_0                      0\n",
       "is_friendly_1                      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "0b4e70d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6462, 37)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "6a4f727b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date                             datetime64[ns]\n",
       "home_team                                object\n",
       "away_team                                object\n",
       "rank_home                               float64\n",
       "rank_away                               float64\n",
       "home_score                                int64\n",
       "away_score                                int64\n",
       "result                                    int64\n",
       "rank_dif                                float64\n",
       "rank_change_home                        float64\n",
       "rank_change_away                        float64\n",
       "home_goals_mean                         float64\n",
       "home_goals_mean_l5                      float64\n",
       "home_goals_suf_mean                     float64\n",
       "home_goals_suf_mean_l5                  float64\n",
       "home_rank_mean                          float64\n",
       "home_rank_mean_l5                       float64\n",
       "home_points_mean                        float64\n",
       "home_points_mean_l5                     float64\n",
       "away_goals_mean                         float64\n",
       "away_goals_mean_l5                      float64\n",
       "away_goals_suf_mean                     float64\n",
       "away_goals_suf_mean_l5                  float64\n",
       "away_rank_mean                          float64\n",
       "away_rank_mean_l5                       float64\n",
       "away_points_mean                        float64\n",
       "away_points_mean_l5                     float64\n",
       "home_game_points_mean                   float64\n",
       "home_game_points_mean_l5                float64\n",
       "home_game_points_rank_mean              float64\n",
       "home_game_points_rank_mean_l5           float64\n",
       "away_game_points_mean                   float64\n",
       "away_game_points_mean_l5                float64\n",
       "away_game_points_rank_mean              float64\n",
       "away_game_points_rank_mean_l5           float64\n",
       "is_friendly_0                             uint8\n",
       "is_friendly_1                             uint8\n",
       "dtype: object"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "747f9dad",
   "metadata": {},
   "outputs": [],
   "source": [
    "base_df = base_df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "ff0012d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>home_score</th>\n",
       "      <th>away_score</th>\n",
       "      <th>result</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>...</th>\n",
       "      <th>home_game_points_mean</th>\n",
       "      <th>home_game_points_mean_l5</th>\n",
       "      <th>home_game_points_rank_mean</th>\n",
       "      <th>home_game_points_rank_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "      <th>is_friendly_0</th>\n",
       "      <th>is_friendly_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2015-01-13</td>\n",
       "      <td>Australia</td>\n",
       "      <td>Oman</td>\n",
       "      <td>100.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2015-01-13</td>\n",
       "      <td>Kuwait</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>125.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>56.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2015-01-15</td>\n",
       "      <td>Bahrain</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>110.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>30.0</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032609</td>\n",
       "      <td>0.032609</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2015-01-15</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>Iran</td>\n",
       "      <td>92.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>41.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2015-01-16</td>\n",
       "      <td>Iraq</td>\n",
       "      <td>Japan</td>\n",
       "      <td>114.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>60.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.026087</td>\n",
       "      <td>0.026087</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6457</th>\n",
       "      <td>2023-07-08</td>\n",
       "      <td>Panama</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>57.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.313131</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.029474</td>\n",
       "      <td>0.022302</td>\n",
       "      <td>1.658333</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.025406</td>\n",
       "      <td>0.054850</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6458</th>\n",
       "      <td>2023-07-08</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Costa Rica</td>\n",
       "      <td>14.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-28.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.946565</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.077467</td>\n",
       "      <td>0.029503</td>\n",
       "      <td>1.309278</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.039123</td>\n",
       "      <td>0.004904</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6459</th>\n",
       "      <td>2023-07-09</td>\n",
       "      <td>Guatemala</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>116.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>53.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.523810</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.015821</td>\n",
       "      <td>0.023465</td>\n",
       "      <td>1.294872</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.019150</td>\n",
       "      <td>0.021026</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6460</th>\n",
       "      <td>2023-07-12</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>63.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.316456</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.019235</td>\n",
       "      <td>0.024275</td>\n",
       "      <td>1.954545</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.077421</td>\n",
       "      <td>0.039027</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6461</th>\n",
       "      <td>2023-07-16</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Panama</td>\n",
       "      <td>14.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-43.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.962406</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.077197</td>\n",
       "      <td>0.038206</td>\n",
       "      <td>1.330000</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.029696</td>\n",
       "      <td>0.028361</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6326 rows × 37 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  home_team             away_team  rank_home  rank_away  \\\n",
       "10   2015-01-13  Australia                  Oman      100.0       93.0   \n",
       "12   2015-01-13     Kuwait           South Korea      125.0       69.0   \n",
       "16   2015-01-15    Bahrain  United Arab Emirates      110.0       80.0   \n",
       "17   2015-01-15      Qatar                  Iran       92.0       51.0   \n",
       "19   2015-01-16       Iraq                 Japan      114.0       54.0   \n",
       "...         ...        ...                   ...        ...        ...   \n",
       "6457 2023-07-08     Panama                 Qatar       57.0       58.0   \n",
       "6458 2023-07-08     Mexico            Costa Rica       14.0       42.0   \n",
       "6459 2023-07-09  Guatemala               Jamaica      116.0       63.0   \n",
       "6460 2023-07-12    Jamaica                Mexico       63.0       14.0   \n",
       "6461 2023-07-16     Mexico                Panama       14.0       57.0   \n",
       "\n",
       "      home_score  away_score  result  rank_dif  rank_change_home  ...  \\\n",
       "10             4           0       0       7.0               0.0  ...   \n",
       "12             0           1       1      56.0               1.0  ...   \n",
       "16             1           2       1      30.0             -12.0  ...   \n",
       "17             0           1       1      41.0              -3.0  ...   \n",
       "19             0           1       1      60.0              11.0  ...   \n",
       "...          ...         ...     ...       ...               ...  ...   \n",
       "6457           4           0       0      -1.0              -1.0  ...   \n",
       "6458           2           0       0     -28.0              -1.0  ...   \n",
       "6459           0           1       1      53.0               0.0  ...   \n",
       "6460           0           3       1      49.0               0.0  ...   \n",
       "6461           1           0       0     -43.0              -1.0  ...   \n",
       "\n",
       "      home_game_points_mean  home_game_points_mean_l5  \\\n",
       "10                 3.000000                       3.0   \n",
       "12                 0.000000                       0.0   \n",
       "16                 0.000000                       0.0   \n",
       "17                 0.000000                       0.0   \n",
       "19                 3.000000                       3.0   \n",
       "...                     ...                       ...   \n",
       "6457               1.313131                       1.4   \n",
       "6458               1.946565                       2.0   \n",
       "6459               1.523810                       1.4   \n",
       "6460               1.316456                       1.4   \n",
       "6461               1.962406                       2.4   \n",
       "\n",
       "      home_game_points_rank_mean  home_game_points_rank_mean_l5  \\\n",
       "10                      0.024000                       0.024000   \n",
       "12                      0.000000                       0.000000   \n",
       "16                      0.000000                       0.000000   \n",
       "17                      0.000000                       0.000000   \n",
       "19                      0.032258                       0.032258   \n",
       "...                          ...                            ...   \n",
       "6457                    0.029474                       0.022302   \n",
       "6458                    0.077467                       0.029503   \n",
       "6459                    0.015821                       0.023465   \n",
       "6460                    0.019235                       0.024275   \n",
       "6461                    0.077197                       0.038206   \n",
       "\n",
       "      away_game_points_mean  away_game_points_mean_l5  \\\n",
       "10                 0.000000                       0.0   \n",
       "12                 3.000000                       3.0   \n",
       "16                 3.000000                       3.0   \n",
       "17                 3.000000                       3.0   \n",
       "19                 3.000000                       3.0   \n",
       "...                     ...                       ...   \n",
       "6457               1.658333                       1.4   \n",
       "6458               1.309278                       0.4   \n",
       "6459               1.294872                       1.0   \n",
       "6460               1.954545                       2.4   \n",
       "6461               1.330000                       1.4   \n",
       "\n",
       "      away_game_points_rank_mean  away_game_points_rank_mean_l5  \\\n",
       "10                      0.000000                       0.000000   \n",
       "12                      0.032258                       0.032258   \n",
       "16                      0.032609                       0.032609   \n",
       "17                      0.027273                       0.027273   \n",
       "19                      0.026087                       0.026087   \n",
       "...                          ...                            ...   \n",
       "6457                    0.025406                       0.054850   \n",
       "6458                    0.039123                       0.004904   \n",
       "6459                    0.019150                       0.021026   \n",
       "6460                    0.077421                       0.039027   \n",
       "6461                    0.029696                       0.028361   \n",
       "\n",
       "      is_friendly_0  is_friendly_1  \n",
       "10                1              0  \n",
       "12                1              0  \n",
       "16                1              0  \n",
       "17                1              0  \n",
       "19                1              0  \n",
       "...             ...            ...  \n",
       "6457              1              0  \n",
       "6458              1              0  \n",
       "6459              1              0  \n",
       "6460              1              0  \n",
       "6461              1              0  \n",
       "\n",
       "[6326 rows x 37 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9f0891e",
   "metadata": {},
   "source": [
    "무승부 게임을 홈 팀의 패배로 간주하고 target 행 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "ff09fedc",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=base_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "04e6412c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def no_draw(x):\n",
    "    if x == 2:\n",
    "        return 1\n",
    "    else:\n",
    "        return x\n",
    "    \n",
    "df[\"target\"] = df[\"result\"].apply(lambda x: no_draw(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "29b11796",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>home_score</th>\n",
       "      <th>away_score</th>\n",
       "      <th>result</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>...</th>\n",
       "      <th>home_game_points_mean_l5</th>\n",
       "      <th>home_game_points_rank_mean</th>\n",
       "      <th>home_game_points_rank_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "      <th>is_friendly_0</th>\n",
       "      <th>is_friendly_1</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2015-01-13</td>\n",
       "      <td>Australia</td>\n",
       "      <td>Oman</td>\n",
       "      <td>100.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2015-01-13</td>\n",
       "      <td>Kuwait</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>125.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>56.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2015-01-15</td>\n",
       "      <td>Bahrain</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>110.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>30.0</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032609</td>\n",
       "      <td>0.032609</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2015-01-15</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>Iran</td>\n",
       "      <td>92.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>41.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2015-01-16</td>\n",
       "      <td>Iraq</td>\n",
       "      <td>Japan</td>\n",
       "      <td>114.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>60.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.026087</td>\n",
       "      <td>0.026087</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  home_team             away_team  rank_home  rank_away  \\\n",
       "10 2015-01-13  Australia                  Oman      100.0       93.0   \n",
       "12 2015-01-13     Kuwait           South Korea      125.0       69.0   \n",
       "16 2015-01-15    Bahrain  United Arab Emirates      110.0       80.0   \n",
       "17 2015-01-15      Qatar                  Iran       92.0       51.0   \n",
       "19 2015-01-16       Iraq                 Japan      114.0       54.0   \n",
       "\n",
       "    home_score  away_score  result  rank_dif  rank_change_home  ...  \\\n",
       "10           4           0       0       7.0               0.0  ...   \n",
       "12           0           1       1      56.0               1.0  ...   \n",
       "16           1           2       1      30.0             -12.0  ...   \n",
       "17           0           1       1      41.0              -3.0  ...   \n",
       "19           0           1       1      60.0              11.0  ...   \n",
       "\n",
       "    home_game_points_mean_l5  home_game_points_rank_mean  \\\n",
       "10                       3.0                    0.024000   \n",
       "12                       0.0                    0.000000   \n",
       "16                       0.0                    0.000000   \n",
       "17                       0.0                    0.000000   \n",
       "19                       3.0                    0.032258   \n",
       "\n",
       "    home_game_points_rank_mean_l5  away_game_points_mean  \\\n",
       "10                       0.024000                    0.0   \n",
       "12                       0.000000                    3.0   \n",
       "16                       0.000000                    3.0   \n",
       "17                       0.000000                    3.0   \n",
       "19                       0.032258                    3.0   \n",
       "\n",
       "    away_game_points_mean_l5  away_game_points_rank_mean  \\\n",
       "10                       0.0                    0.000000   \n",
       "12                       3.0                    0.032258   \n",
       "16                       3.0                    0.032609   \n",
       "17                       3.0                    0.027273   \n",
       "19                       3.0                    0.026087   \n",
       "\n",
       "    away_game_points_rank_mean_l5  is_friendly_0  is_friendly_1  target  \n",
       "10                       0.000000              1              0       0  \n",
       "12                       0.032258              1              0       1  \n",
       "16                       0.032609              1              0       1  \n",
       "17                       0.027273              1              0       1  \n",
       "19                       0.026087              1              0       1  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e8f3b473",
   "metadata": {},
   "source": [
    "Modeling \n",
    "- logistic regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "3f3145a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6326, 38)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "6972dbe0",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(['home_score', 'away_score','result'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "73c931c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>rank_change_away</th>\n",
       "      <th>home_goals_mean</th>\n",
       "      <th>home_goals_mean_l5</th>\n",
       "      <th>...</th>\n",
       "      <th>home_game_points_mean_l5</th>\n",
       "      <th>home_game_points_rank_mean</th>\n",
       "      <th>home_game_points_rank_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "      <th>is_friendly_0</th>\n",
       "      <th>is_friendly_1</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2015-01-13</td>\n",
       "      <td>Australia</td>\n",
       "      <td>Oman</td>\n",
       "      <td>100.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>0.024000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2015-01-13</td>\n",
       "      <td>Kuwait</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>125.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2015-01-15</td>\n",
       "      <td>Bahrain</td>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>110.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032609</td>\n",
       "      <td>0.032609</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2015-01-15</td>\n",
       "      <td>Qatar</td>\n",
       "      <td>Iran</td>\n",
       "      <td>92.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2015-01-16</td>\n",
       "      <td>Iraq</td>\n",
       "      <td>Japan</td>\n",
       "      <td>114.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.026087</td>\n",
       "      <td>0.026087</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  home_team             away_team  rank_home  rank_away  \\\n",
       "10 2015-01-13  Australia                  Oman      100.0       93.0   \n",
       "12 2015-01-13     Kuwait           South Korea      125.0       69.0   \n",
       "16 2015-01-15    Bahrain  United Arab Emirates      110.0       80.0   \n",
       "17 2015-01-15      Qatar                  Iran       92.0       51.0   \n",
       "19 2015-01-16       Iraq                 Japan      114.0       54.0   \n",
       "\n",
       "    rank_dif  rank_change_home  rank_change_away  home_goals_mean  \\\n",
       "10       7.0               0.0               0.0              4.0   \n",
       "12      56.0               1.0               0.0              1.0   \n",
       "16      30.0             -12.0              -1.0              0.0   \n",
       "17      41.0              -3.0               0.0              1.0   \n",
       "19      60.0              11.0               0.0              1.0   \n",
       "\n",
       "    home_goals_mean_l5  ...  home_game_points_mean_l5  \\\n",
       "10                 4.0  ...                       3.0   \n",
       "12                 1.0  ...                       0.0   \n",
       "16                 0.0  ...                       0.0   \n",
       "17                 1.0  ...                       0.0   \n",
       "19                 1.0  ...                       3.0   \n",
       "\n",
       "    home_game_points_rank_mean  home_game_points_rank_mean_l5  \\\n",
       "10                    0.024000                       0.024000   \n",
       "12                    0.000000                       0.000000   \n",
       "16                    0.000000                       0.000000   \n",
       "17                    0.000000                       0.000000   \n",
       "19                    0.032258                       0.032258   \n",
       "\n",
       "    away_game_points_mean  away_game_points_mean_l5  \\\n",
       "10                    0.0                       0.0   \n",
       "12                    3.0                       3.0   \n",
       "16                    3.0                       3.0   \n",
       "17                    3.0                       3.0   \n",
       "19                    3.0                       3.0   \n",
       "\n",
       "    away_game_points_rank_mean  away_game_points_rank_mean_l5  is_friendly_0  \\\n",
       "10                    0.000000                       0.000000              1   \n",
       "12                    0.032258                       0.032258              1   \n",
       "16                    0.032609                       0.032609              1   \n",
       "17                    0.027273                       0.027273              1   \n",
       "19                    0.026087                       0.026087              1   \n",
       "\n",
       "    is_friendly_1  target  \n",
       "10              0       0  \n",
       "12              0       1  \n",
       "16              0       1  \n",
       "17              0       1  \n",
       "19              0       1  \n",
       "\n",
       "[5 rows x 35 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "660e3c98",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.iloc[:, 3:-1]  # Assuming the target column is the last column\n",
    "y = df[[\"target\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "e6f95d0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression  \n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "14473a2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = np.ravel(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "3bf66ce0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# StandardScaler를 사용하여 데이터 스케일링\n",
    "scaler = StandardScaler()\n",
    "X = scaler.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "810efcb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "7f7f6516",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rkdal\\anaconda3\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = LogisticRegression() \n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "0293d149",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix, roc_curve, roc_auc_score\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "08bfde3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.7101105845181674\n"
     ]
    }
   ],
   "source": [
    "y_pred = model.predict(X_test)\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f'Accuracy: {accuracy}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "aa81e5d1",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[396, 193],\n",
       "       [174, 503]], dtype=int64)"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "confusion_matrix(y_test, y_pred)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "5546289b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['date', 'home_team', 'away_team', 'rank_home', 'rank_away', 'rank_dif',\n",
       "       'rank_change_home', 'rank_change_away', 'home_goals_mean',\n",
       "       'home_goals_mean_l5', 'home_goals_suf_mean', 'home_goals_suf_mean_l5',\n",
       "       'home_rank_mean', 'home_rank_mean_l5', 'home_points_mean',\n",
       "       'home_points_mean_l5', 'away_goals_mean', 'away_goals_mean_l5',\n",
       "       'away_goals_suf_mean', 'away_goals_suf_mean_l5', 'away_rank_mean',\n",
       "       'away_rank_mean_l5', 'away_points_mean', 'away_points_mean_l5',\n",
       "       'home_game_points_mean', 'home_game_points_mean_l5',\n",
       "       'home_game_points_rank_mean', 'home_game_points_rank_mean_l5',\n",
       "       'away_game_points_mean', 'away_game_points_mean_l5',\n",
       "       'away_game_points_rank_mean', 'away_game_points_rank_mean_l5',\n",
       "       'is_friendly_0', 'is_friendly_1', 'target'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "9c83fd18",
   "metadata": {},
   "outputs": [],
   "source": [
    "def analyze(model):\n",
    "    fpr, tpr, _ = roc_curve(y_test, model.predict_proba(X_test)[:,1]) #test AUC\n",
    "    plt.figure(figsize=(15,10))\n",
    "    plt.plot([0, 1], [0, 1], 'k--')\n",
    "    plt.plot(fpr, tpr, label=\"test\")\n",
    "\n",
    "    fpr_train, tpr_train, _ = roc_curve(y_train, model.predict_proba(X_train)[:,1]) #train AUC\n",
    "    plt.plot(fpr_train, tpr_train, label=\"train\")\n",
    "    auc_test = roc_auc_score(y_test, model.predict_proba(X_test)[:,1])\n",
    "    auc_train = roc_auc_score(y_train, model.predict_proba(X_train)[:,1])\n",
    "    plt.legend()\n",
    "    plt.title('AUC score is %.2f on test and %.2f on training'%(auc_test, auc_train))\n",
    "    plt.show()\n",
    "    \n",
    "    plt.figure(figsize=(15, 10))\n",
    "    cm = confusion_matrix(y_test, model.predict(X_test))\n",
    "    sns.heatmap(cm, annot=True, fmt=\"d\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "e87a6b77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "analyze(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "a1b11c29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.19744745, -0.20710795,  0.40821223, -0.0554333 , -0.01658145,\n",
       "       -0.25742994, -0.00602569,  0.27366945,  0.16953886,  0.44019132,\n",
       "        0.14109333,  0.09833211, -0.00494766,  0.26284127,  0.10185475,\n",
       "       -0.28441395, -0.12722567, -0.60934397, -0.02172141, -0.11204012,\n",
       "       -0.04638335,  0.10603157,  0.01358647, -0.03129563,  0.03797871,\n",
       "       -0.19713696,  0.0259031 ,  0.0271349 , -0.04603593, -0.01528008,\n",
       "        0.01528008])"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coefficients = model.coef_[0]\n",
    "coefficients"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "46f49053",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['date', 'home_team', 'away_team', 'rank_home', 'rank_away', 'rank_dif',\n",
       "       'rank_change_home', 'rank_change_away', 'home_goals_mean',\n",
       "       'home_goals_mean_l5', 'home_goals_suf_mean', 'home_goals_suf_mean_l5',\n",
       "       'home_rank_mean', 'home_rank_mean_l5', 'home_points_mean',\n",
       "       'home_points_mean_l5', 'away_goals_mean', 'away_goals_mean_l5',\n",
       "       'away_goals_suf_mean', 'away_goals_suf_mean_l5', 'away_rank_mean',\n",
       "       'away_rank_mean_l5', 'away_points_mean', 'away_points_mean_l5',\n",
       "       'home_game_points_mean', 'home_game_points_mean_l5',\n",
       "       'home_game_points_rank_mean', 'home_game_points_rank_mean_l5',\n",
       "       'away_game_points_mean', 'away_game_points_mean_l5',\n",
       "       'away_game_points_rank_mean', 'away_game_points_rank_mean_l5',\n",
       "       'is_friendly_0', 'is_friendly_1', 'target'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_names = df.columns\n",
    "feature_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "73841b0d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "date: 0.1974474522624424\n",
      "home_team: -0.20710794514591935\n",
      "away_team: 0.4082122281456673\n",
      "rank_home: -0.055433302197868066\n",
      "rank_away: -0.01658144537696265\n",
      "rank_dif: -0.25742994161445104\n",
      "rank_change_home: -0.006025693227170022\n",
      "rank_change_away: 0.27366944897559237\n",
      "home_goals_mean: 0.1695388624379659\n",
      "home_goals_mean_l5: 0.4401913172784497\n",
      "home_goals_suf_mean: 0.14109333455624723\n",
      "home_goals_suf_mean_l5: 0.09833211380134547\n",
      "home_rank_mean: -0.004947655760065934\n",
      "home_rank_mean_l5: 0.2628412731303972\n",
      "home_points_mean: 0.10185475466627267\n",
      "home_points_mean_l5: -0.28441394750782184\n",
      "away_goals_mean: -0.12722566973517263\n",
      "away_goals_mean_l5: -0.6093439699614304\n",
      "away_goals_suf_mean: -0.02172141063932289\n",
      "away_goals_suf_mean_l5: -0.11204012496750006\n",
      "away_rank_mean: -0.046383346110599244\n",
      "away_rank_mean_l5: 0.10603156569379675\n",
      "away_points_mean: 0.013586468041172122\n",
      "away_points_mean_l5: -0.03129563353383127\n",
      "home_game_points_mean: 0.037978706890528915\n",
      "home_game_points_mean_l5: -0.19713695864008327\n",
      "home_game_points_rank_mean: 0.025903095937974588\n",
      "home_game_points_rank_mean_l5: 0.027134902019780218\n",
      "away_game_points_mean: -0.04603592676129363\n",
      "away_game_points_mean_l5: -0.015280082612668373\n",
      "away_game_points_rank_mean: 0.015280082612668373\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for feature, coef in zip(feature_names, coefficients):\n",
    "    print(f'{feature}: {coef}')\n",
    "\n",
    "# You can also visualize the coefficients\n",
    "sorted_indices = np.argsort(np.abs(coefficients))\n",
    "sorted_feature_names = feature_names[sorted_indices]\n",
    "sorted_coefficients = coefficients[sorted_indices]\n",
    "\n",
    "plt.figure(figsize=(15, 8))\n",
    "plt.barh(range(len(sorted_feature_names)), sorted_coefficients, align='center')\n",
    "plt.yticks(range(len(sorted_feature_names)), sorted_feature_names)\n",
    "plt.xlabel('Coefficient Value')\n",
    "plt.title('Feature Contributions in Logistic Regression')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7d4ccff1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c52933d3",
   "metadata": {},
   "source": [
    "각 팀별 승류 비교 (한국,일본,이란)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "667af9b9",
   "metadata": {},
   "source": [
    "vs 일본"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "29f4f2dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assuming df is your DataFrame\n",
    "korea_japan_df = df[df['home_team'].isin(['South Korea', 'Japan']) & df['away_team'].isin(['South Korea', 'Japan'])].iloc[[-1]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "c7a5e6ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>rank_change_away</th>\n",
       "      <th>home_goals_mean</th>\n",
       "      <th>home_goals_mean_l5</th>\n",
       "      <th>...</th>\n",
       "      <th>home_game_points_mean_l5</th>\n",
       "      <th>home_game_points_rank_mean</th>\n",
       "      <th>home_game_points_rank_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "      <th>is_friendly_0</th>\n",
       "      <th>is_friendly_1</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4377</th>\n",
       "      <td>2021-03-25</td>\n",
       "      <td>Japan</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>27.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>-11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.973684</td>\n",
       "      <td>1.2</td>\n",
       "      <td>...</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.03654</td>\n",
       "      <td>0.015882</td>\n",
       "      <td>1.935065</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.077794</td>\n",
       "      <td>0.044271</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date home_team    away_team  rank_home  rank_away  rank_dif  \\\n",
       "4377 2021-03-25     Japan  South Korea       27.0       38.0     -11.0   \n",
       "\n",
       "      rank_change_home  rank_change_away  home_goals_mean  home_goals_mean_l5  \\\n",
       "4377               0.0               0.0         1.973684                 1.2   \n",
       "\n",
       "      ...  home_game_points_mean_l5  home_game_points_rank_mean  \\\n",
       "4377  ...                       1.4                     0.03654   \n",
       "\n",
       "      home_game_points_rank_mean_l5  away_game_points_mean  \\\n",
       "4377                       0.015882               1.935065   \n",
       "\n",
       "      away_game_points_mean_l5  away_game_points_rank_mean  \\\n",
       "4377                       2.4                    0.077794   \n",
       "\n",
       "      away_game_points_rank_mean_l5  is_friendly_0  is_friendly_1  target  \n",
       "4377                       0.044271              0              1       0  \n",
       "\n",
       "[1 rows x 35 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "korea_japan_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "91a0e0ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "korea_japan_df=korea_japan_df.iloc[:, 3:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "e8573bbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "k_j=korea_japan_df.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "93d37c17",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rkdal\\anaconda3\\Lib\\site-packages\\sklearn\\base.py:464: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[0.50093967, 0.49906033]])"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.predict_proba(k_j)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d544d6af",
   "metadata": {},
   "source": [
    "vs 이란"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "a55fc0b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "korea_iran_df = df[df['home_team'].isin(['South Korea', 'Iran']) & df['away_team'].isin(['South Korea', 'Iran'])].iloc[[-1]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "894975f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_team</th>\n",
       "      <th>away_team</th>\n",
       "      <th>rank_home</th>\n",
       "      <th>rank_away</th>\n",
       "      <th>rank_dif</th>\n",
       "      <th>rank_change_home</th>\n",
       "      <th>rank_change_away</th>\n",
       "      <th>home_goals_mean</th>\n",
       "      <th>home_goals_mean_l5</th>\n",
       "      <th>...</th>\n",
       "      <th>home_game_points_mean_l5</th>\n",
       "      <th>home_game_points_rank_mean</th>\n",
       "      <th>home_game_points_rank_mean_l5</th>\n",
       "      <th>away_game_points_mean</th>\n",
       "      <th>away_game_points_mean_l5</th>\n",
       "      <th>away_game_points_rank_mean</th>\n",
       "      <th>away_game_points_rank_mean_l5</th>\n",
       "      <th>is_friendly_0</th>\n",
       "      <th>is_friendly_1</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5461</th>\n",
       "      <td>2022-03-24</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>Iran</td>\n",
       "      <td>29.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>-4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.736264</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.070362</td>\n",
       "      <td>0.034618</td>\n",
       "      <td>2.28</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.033794</td>\n",
       "      <td>0.035832</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date    home_team away_team  rank_home  rank_away  rank_dif  \\\n",
       "5461 2022-03-24  South Korea      Iran       29.0       21.0       8.0   \n",
       "\n",
       "      rank_change_home  rank_change_away  home_goals_mean  home_goals_mean_l5  \\\n",
       "5461              -4.0               0.0         1.736264                 3.0   \n",
       "\n",
       "      ...  home_game_points_mean_l5  home_game_points_rank_mean  \\\n",
       "5461  ...                       3.0                    0.070362   \n",
       "\n",
       "      home_game_points_rank_mean_l5  away_game_points_mean  \\\n",
       "5461                       0.034618                   2.28   \n",
       "\n",
       "      away_game_points_mean_l5  away_game_points_rank_mean  \\\n",
       "5461                       2.6                    0.033794   \n",
       "\n",
       "      away_game_points_rank_mean_l5  is_friendly_0  is_friendly_1  target  \n",
       "5461                       0.035832              1              0       0  \n",
       "\n",
       "[1 rows x 35 columns]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "korea_iran_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "2af3663b",
   "metadata": {},
   "outputs": [],
   "source": [
    "korea_iran_df=korea_iran_df.iloc[:, 3:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "da0fd01d",
   "metadata": {},
   "outputs": [],
   "source": [
    "k_i=korea_iran_df.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "455c4705",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rkdal\\anaconda3\\Lib\\site-packages\\sklearn\\base.py:464: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[0.37064337, 0.62935663]])"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.predict_proba(k_i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "848c7c90",
   "metadata": {},
   "outputs": [],
   "source": [
    "k_j_df=df[df['away_team'] == 'South Korea'].iloc[[-1]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f50d347d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
